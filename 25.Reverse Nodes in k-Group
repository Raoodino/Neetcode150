/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        ListNode cur = head;
        for(int i=0; i<k; i++){
            //if the length of this list is less than k
            //no need to reverse
            if(cur==null){
                return head;
            }
            cur = cur.next;
        }
        ListNode tail = cur;
        ListNode newHead = reverse(head, tail);
        head.next = reverseKGroup(tail, k);
        return newHead;
        
    }

    private ListNode reverse(ListNode head, ListNode tail){
        ListNode pre = null;
        ListNode next = null;
        while(head != tail){
            next = head.next;
            head.next = pre;
            pre = head;
            head = next;
        }
        return pre;

    }
}
