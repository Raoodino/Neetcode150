/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        Queue<ListNode> queue = new PriorityQueue<>((o1,o2) -> o1.val - o2.val);
        int k = lists.length;
        //add linkedlists
        for(ListNode node: lists){
            if(node !=null){
                 queue.offer(node);
            }
        }

        ListNode head = new ListNode(-1);
        ListNode cur = head;

        while(!queue.isEmpty()){
            cur.next = queue.poll();
            cur = cur.next;
            if(cur.next!=null){
                queue.offer(cur.next);
            }
        }
        return head.next;
        
        
    }
}
